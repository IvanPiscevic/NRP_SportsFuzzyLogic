FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT
     activity: REAL;
     teammates: REAL;
     fear: REAL;
     season: REAL;
     cost: REAL;
END_VAR

VAR_OUTPUT
 	decision: REAL;
END_VAR

FUZZIFY activity
    TERM very_low := (0, 1) (0.5, 0);
    TERM low := (0.25, 0) (0.75, 1) (1.25, 1) (1.5, 0);
    TERM average := (1.25, 0) (1.75, 1) (2.25, 1) (2.5, 0);
    TERM high := (2.25, 0) (2.5, 1) (3, 1) (3.25, 0);
    TERM very_high := (3, 0) (3.25, 1) (3.75, 1) (4, 0);
END_FUZZIFY

FUZZIFY teammates
    TERM no_teammates := (0, 1) (1, 0);
    TERM below_average := (0.99, 0) (1, 1) (3, 1) (3, 0);
    TERM average := (2.99, 0) (3, 1) (5, 1) (5, 0);
    TERM above_average := (4.99, 1) (5, 1) (8, 1) (8, 0);
    TERM a_lot_teammates := (7.99, 0) (8, 1) (11, 1) (12, 0);
END_FUZZIFY

FUZZIFY fear
    TERM very_low := (0, 1.0) (3, 0.0);
    TERM low := (2, 0.0) (3, 1.0) (4, 1.0) (5, 0.0);
    TERM average := (4, 0.0) (5, 1.0) (6, 1.0) (7, 0.0);
    TERM high := (6, 0.0) (7, 1.0) (8, 1.0) (9, 0.0);
    TERM very_high := (8, 0.0) (9, 1.0) (10, 1.0) (12, 0.0);
END_FUZZIFY

FUZZIFY season
    TERM spring := (0, 0) (0.25, 1) (0.50, 1) (1, 0);
    TERM summer := (0.75, 0) (1.25, 1) (1.50, 1) (2, 0);
    TERM fall := (1.75, 0) (2.25, 1) (2.50, 1) (3, 0);
    TERM winter := (2.75, 0) (3.25, 1) (3.5, 1) (4, 0);
END_FUZZIFY

FUZZIFY cost
    TERM very_low := (0, 1.0) (100, 0.0);
    TERM low := (80, 0.0) (120, 1.0) (460, 1.0) (500, 0.0);
    TERM average := (450, 0.0) (520, 1.0) (960, 1.0) (1000, 0.0);
    TERM high := (950, 0.0) (1020, 1.0) (4960, 1.0) (5000, 0.0);
    TERM very_high := (4900, 0.0) (5500, 1.0) (9400, 1.0) (11000, 0.0);
END_FUZZIFY

DEFUZZIFY decision
    TERM football := (0,0) (5,1) (10,0);
    TERM basketball := (10,0) (15,1) (20,0);
    TERM handball := (20,0) (25,1) (30,0);
    TERM rally := (30,0) (35,1) (40,0);
    TERM swimming := (40,0) (45,1) (50,0);
    TERM curling := (50,0) (55,1) (60,0);
    TERM cycling := (60,0) (65,1) (70,0);
    TERM boxing := (70,0) (75,1) (80,0);
    TERM skiing := (80,0) (85,1) (90,0);
    TERM hockey := (90,0) (95,1) (100,0);
    TERM sledding := (100,0) (105,1) (110,0);
    TERM dancing := (110,0) (115,1) (120,0);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK sport_rules
    AND : MIN;
    OR : MAX;
    ACT : MIN;
    ACCU : MAX;

    RULE 1 : IF (activity IS high OR activity IS very_high) AND
            teammates IS a_lot_teammates AND
            (cost IS low OR cost IS average) AND
            (fear IS very_low OR fear IS low) AND
            (season IS winter OR season IS summer OR season IS fall OR season IS spring)
    THEN decision IS football;

    RULE 2 : IF (activity IS high OR activity IS very_high) AND
                (teammates IS average OR teammates IS above_average) AND
                (cost IS low OR cost IS average) AND
                (fear IS very_low OR fear IS low) AND
                (season IS winter OR season IS summer OR season IS fall OR season IS spring)
    THEN decision IS basketball;

    RULE 3 : IF (activity IS high OR activity IS very_high) AND
                (teammates IS average OR teammates IS above_average) AND
                (cost IS low OR cost IS average) AND
                (fear IS average OR fear IS low) AND
                (season IS winter OR season IS summer OR season IS fall OR season IS spring)
    THEN decision IS handball;

    RULE 4 : IF (activity IS very_low OR activity IS low) AND
                teammates IS below_average AND
                cost IS very_high AND
                (fear IS high OR fear IS very_high) AND
                (season IS winter OR season IS summer OR season IS fall OR season IS spring)
    THEN decision IS rally;

    RULE 5 : IF (activity is high OR activity IS very_high) AND
            teammates IS no_teammates AND
            (cost IS average OR cost IS high) AND
            (fear IS very_low OR fear IS low) AND
            (season IS winter OR season IS summer OR season IS fall OR season IS spring)
    THEN decision IS swimming;

    RULE 6 : IF (activity IS low OR activity IS very_low) AND
            (cost IS very_low OR cost IS low) AND
            (teammates IS below_average OR teammates IS no_teammates) AND
            fear IS very_low AND
            season IS winter
    THEN decision IS curling;

    RULE 7 : IF (activity IS very_high OR activity IS high) AND
            (cost IS low OR cost IS average) AND
            teammates IS no_teammates AND
            (fear IS low OR fear IS very_low) AND
            (season IS spring OR season IS summer OR season IS fall)
    THEN decision IS cycling;

    RULE 8 : IF (activity IS very_high OR activity IS high) AND
            teammates IS no_teammates AND
            (fear IS high OR fear IS very_high) AND
            (cost is average OR cost IS high OR cost IS low)
    THEN decision IS boxing;

    RULE 9 : IF (activity IS average OR activity IS high) AND
             teammates IS no_teammates AND
             season IS winter AND
             (fear IS high OR fear IS average OR fear IS very_high) AND
             (cost IS high OR cost IS average)
    THEN decision IS skiing;

    RULE 10: IF (activity IS very_high OR activity IS high) AND
             (teammates IS average OR teammates IS above_average) AND
             (fear IS average OR fear IS high) AND
             (season IS fall OR season IS winter)
    THEN decision IS hockey;

    RULE 11 : IF (activity IS low OR activity IS very_low) AND
              (teammates IS below_average OR teammates IS no_teammates) AND
              (cost IS average OR cost IS high) AND
              (fear IS average OR fear IS high) AND
              season IS winter
    THEN decision IS sledding;

    RULE 12 : IF (activity IS average OR activity IS low) AND
              (teammates IS below_average OR teammates IS no_teammates) AND
              (cost IS average OR cost IS high) AND
              fear IS very_low AND
              (season IS winter OR season IS summer OR season IS fall OR season IS spring)
    THEN decision IS dancing;

END_RULEBLOCK

END_FUNCTION_BLOCK